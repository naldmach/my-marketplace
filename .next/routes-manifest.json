{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/category/[category]",
      "regex": "^/category/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory"
      },
      "namedRegex": "^/category/(?<nxtPcategory>[^/]+?)(?:/)?$"
    },
    {
      "page": "/listing/[id]",
      "regex": "^/listing/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/listing/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/create",
      "regex": "^/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create(?:/)?$"
    },
    {
      "page": "/create/home",
      "regex": "^/create/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create/home(?:/)?$"
    },
    {
      "page": "/create/item",
      "regex": "^/create/item(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create/item(?:/)?$"
    },
    {
      "page": "/create/multiple",
      "regex": "^/create/multiple(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create/multiple(?:/)?$"
    },
    {
      "page": "/create/vehicle",
      "regex": "^/create/vehicle(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create/vehicle(?:/)?$"
    },
    {
      "page": "/create-listing",
      "regex": "^/create\\-listing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create\\-listing(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/messages",
      "regex": "^/messages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/messages(?:/)?$"
    },
    {
      "page": "/notifications",
      "regex": "^/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notifications(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/seller-help",
      "regex": "^/seller\\-help(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller\\-help(?:/)?$"
    },
    {
      "page": "/your-listings",
      "regex": "^/your\\-listings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/your\\-listings(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}